global
    maxconn 20000
    ulimit-n 80084
    log stdout format raw local0 debug
    daemon

frontend stats
    mode http
    bind *:8444
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE

frontend fe_http
    bind *:8404
    mode http
    log global
    option httplog
    option nolinger
    maxconn 8000
    timeout client 30s

    {% if use_https %}
    # Redirect HTTP to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    {% else %}
    acl is_grafana hdr_reg(host) -i ^grafana\.sou\.local(:8404)?$
    use_backend grafana if is_grafana

    acl is_prometheus hdr_reg(host) -i ^prometheus\.sou\.local(:8404)?$
    use_backend prometheus if is_prometheus
    {% endif %}

{% if use_https %}
frontend fe_https
    bind *:8443 ssl crt /usr/local/etc/haproxy/certs/haproxy.pem
    mode http
    log global
    option httplog
    option nolinger
    maxconn 8000
    timeout client 30s

    acl is_grafana hdr_reg(host) -i ^grafana\.sou\.local(:8443)?$
    use_backend grafana if is_grafana

    acl is_prometheus hdr_reg(host) -i ^prometheus\.sou\.local(:8443)?$
    use_backend prometheus if is_prometheus
    {% endif %}

backend grafana
    log global
    mode http
    timeout client 30s       # Timeout for client-side
    timeout connect 5s       # Timeout for establishing connection
    timeout server 30s       # Timeout for server-side
    balance roundrobin
    option httplog
    option httpchk
    option forwardfor
    {% for i in range(1, backend_count + 1) %}
    server grafana{{ i }} 192.168.56.{{ i + 65 }}:3000 check
    {% endfor %}

backend prometheus
    log global 
    mode http
    option httplog
    timeout client 30s       # Timeout for client-side
    timeout connect 5s       # Timeout for establishing connection
    timeout server 30s       # Timeout for server-side
    balance roundrobin
    option httpchk
    {% for i in range(1, backend_count + 1) %}
    server prometheus{{ i }} 192.168.56.{{ i + 65 }}:9090 check
    {% endfor %}
